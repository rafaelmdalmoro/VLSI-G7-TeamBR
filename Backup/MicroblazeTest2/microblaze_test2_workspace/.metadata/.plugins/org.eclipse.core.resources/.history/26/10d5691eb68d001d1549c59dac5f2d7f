/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xgpio.h"
#include "xparameters.h"

#include "xintc.h"
//#include "xil_io.h"
//#include "xintc_l.h"
//#include "xil_exception.h"
//#include "microblaze_sleep.h"

void IO_Init(void);

XGpio button, led;
XGpio digits[8];
uint8_t val;

XIntc int_controller;

int main()
{
    init_platform();
    IO_Init();

    print("Hello World\n\r");

	XGpio_InterruptEnable(&button, 0x0);
//	XGpio_InterruptGlobalEnable(&button);
//	XGpio_InterruptClear(&button, 0x0);

	// INTERRUPT INIT
//	XIntc_Initialize(&int_controller, XPAR_INTC_0_DEVICE_ID);

	while(1){
	    	val = XGpio_DiscreteRead(&button, 1);
	    	XGpio_DiscreteWrite(&led, 1, val);
	    	for(int i=0; i<8; i++){
	    		XGpio_DiscreteWrite(&digits[i], 1, (val+i));
	    	}
	}

    cleanup_platform();
    return 0;
}

void IO_Init(){
    // GPIO INIT
	XGpio_Initialize(&button, XPAR_AXI_GPIO_BUTTONS_DEVICE_ID);
	XGpio_Initialize(&led, XPAR_AXI_GPIO_LEDS_DEVICE_ID);

	XGpio_Initialize(&digits[0], XPAR_AXI_GPIO_D0_DEVICE_ID);
	XGpio_Initialize(&digits[1], XPAR_AXI_GPIO_D1_DEVICE_ID);
	XGpio_Initialize(&digits[2], XPAR_AXI_GPIO_D2_DEVICE_ID);
	XGpio_Initialize(&digits[3], XPAR_AXI_GPIO_D3_DEVICE_ID);
	XGpio_Initialize(&digits[4], XPAR_AXI_GPIO_D4_DEVICE_ID);
	XGpio_Initialize(&digits[5], XPAR_AXI_GPIO_D5_DEVICE_ID);
	XGpio_Initialize(&digits[6], XPAR_AXI_GPIO_D6_DEVICE_ID);
	XGpio_Initialize(&digits[7], XPAR_AXI_GPIO_D7_DEVICE_ID);

	XGpio_SetDataDirection(&button, 1, 0x11111);
	XGpio_SetDataDirection(&led, 1, 0x0);
	for(int i=0; i<8; i++){
		XGpio_SetDataDirection(&digits[i], 1, 0x0);
	}
	return;
}
